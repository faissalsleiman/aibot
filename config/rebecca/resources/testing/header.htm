<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
<title>RebeccaAIML</title>
<meta http-equiv="content-type" content="application/xhtml+xml; charset=iso-8859-1" />
<meta name="author" content="Frank Hassanabad" />
<meta name="description" content="RebeccaAIML is a Windows/Linux Object Oriented C++ chatter bot api/interpreter for AIML (Artificial Intelligence Markup Language) from the ALICE project." />
<meta name="keywords" content="aiml,C++,bot,chatterbot,interpreter" />
<link rel="stylesheet" href="mike02.css" type="text/css" />
</head>

<body>
<div id="container" >
		<div id="headerWrap">
			<div id="header">
				<h1><a href="index.htm">RebeccaAIML</a></h1>
				<ul id="navigation">
					<li><a href="contact.htm">Contact</a></li>
					<li><a href="links.htm">Links</a></li>
					<li><a href="lists.htm">Lists</a></li>
					<li><a href="development.htm">Development</a></li>
					<li><a href="users.htm">Users</a></li>
					<li><a href="documentation.htm">Documentation</a></li>
					<li><a href="download.htm">Download</a></li>
					<li><a href="index.htm">Home</a></li>
				</ul>
			</div>
		</div>
		<div id="content">
			<div id="documentHeader">
				 <div id="siteDescription"><p>Regression test against RebeccaAIML to ensure Quality</p></div> 
			</div>
				<div id="secondary">
				    <h2>Quality Assurance</h2>
				    <p>
					When a bug is reported against RebeccaAIML on output, I generate
					a new test case and add it to the regression suite.  This ensures
					that no newer release can break backwards AIML outputing compatibility.
					</p>
					<h2>SourceForge</h2>
					<a href="http://sourceforge.net/">
					    <img src="home_files/sflogo.png" alt="SourceForge Logo"/>
					</a>
				</div>
<h1>
Regression Tests</h1><br/>
<h3>Foreword</h3>
<p>
The failure of "return name when set (40)" is a low priority but is something I am 
looking into.  The lack of javascript in my interpreter is of the lowest priority 
and will be added last.<br/><br/>

False positives are "infinite loop (41)"  I just terminate infinite
loops However, it will print a failure when in fact it passes the test.
</p>
<br/>
